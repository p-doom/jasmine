# Hyperparameters follow Hessel et al. (2018)
import dopamine.jax.agents.rainbow.rainbow_agent
import dopamine.jax.replay_memory.replay_buffer
import dopamine.jax.replay_memory.samplers
import dopamine.discrete_domains.atari_lib
import dopamine.discrete_domains.run_experiment

JaxRainbowAgent.num_atoms = 51
JaxRainbowAgent.vmax = 10.
JaxRainbowAgent.gamma = 0.99
JaxRainbowAgent.update_horizon = 3
JaxRainbowAgent.min_replay_history = 20000  # agent steps
JaxRainbowAgent.update_period = 4
JaxRainbowAgent.target_update_period = 8000  # agent steps
JaxRainbowAgent.epsilon_train = 0.01
JaxRainbowAgent.epsilon_eval = 0.001
JaxRainbowAgent.epsilon_decay_period = 250000  # agent steps
JaxRainbowAgent.replay_scheme = 'prioritized'

# Note these parameters are different from C51's.
create_optimizer.learning_rate = 0.0000625
create_optimizer.eps = 0.00015

atari_lib.create_atari_environment.game_name = 'Breakout'
# No sticky actions unlike suggested by prior work (Machado et al., 2017) since we want the actions to be ground-truth
atari_lib.create_atari_environment.sticky_actions = False
create_runner.schedule = 'continuous_train'
create_agent.agent_name = 'jax_rainbow'
create_agent.debug_mode = True
Runner.num_iterations = 200
Runner.training_steps = 250000  # agent steps
Runner.evaluation_steps = 125000  # agent steps
Runner.max_steps_per_episode = 27000  # agent steps

ReplayBuffer.max_capacity = 1_000_000
ReplayBuffer.batch_size = 32
PrioritizedSamplingDistribution.max_capacity = 1_000_000
